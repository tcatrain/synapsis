group 'org.synapsis'
version '1.0-SNAPSHOT'

apply plugin: 'application'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.eclipse.jetty:jetty-server:9.1.5.v20140505'
    compile 'org.eclipse.jetty:jetty-servlet:9.1.5.v20140505'
    compile 'org.eclipse.jetty:jetty-servlets:9.1.5.v20140505'

    compile 'com.sun.jersey:jersey-server:1.19.1'
    compile 'com.sun.jersey:jersey-core:1.19.1'
    compile 'com.sun.jersey:jersey-servlet:1.19.1'
    compile 'com.sun.jersey:jersey-bundle:1.19.1'
    compile 'com.sun.jersey.contribs:jersey-guice:1.19.1'

    compile 'org.codehaus.jackson:jackson-core-asl:1.9.11'
    compile 'org.codehaus.jackson:jackson-jaxrs:1.9.11'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.11'
    compile 'org.codehaus.jackson:jackson-xc:1.9.11'

    compile 'org.slf4j:slf4j-api:1.7.2'
}

task stage {
    dependsOn build
}

mainClassName = 'org.synapsis.core.library.server.SynapsisCoreServer';

distributions {
    main {
        contents {
            into('bin') {
                from {'src/main/resources/'}
                include '**.properties'
            }
        }
    }
}

tasks.startScripts {
    doLast {
        def scriptFile = file "${outputDir}/${applicationName}"
        scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME:$APP_HOME/lib')
        scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME\\lib', 'CLASSPATH=$APP_HOME:$APP_HOME\\lib')
    }
}
